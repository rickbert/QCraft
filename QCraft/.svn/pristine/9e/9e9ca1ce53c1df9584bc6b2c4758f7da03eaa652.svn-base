package combat;

import org.bukkit.Bukkit;
import org.bukkit.entity.Arrow;
import org.bukkit.entity.LivingEntity;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.entity.EntityDamageByEntityEvent;
import org.bukkit.event.entity.EntityDamageEvent;
import org.bukkit.event.player.PlayerInteractEntityEvent;

import actives.Active;
import actives.Active.ActiveType;
import custom.Tool;
import main.Plugin;

public class CombatHandler implements Listener {

	public CombatHandler(Plugin plugin) {
		Bukkit.getPluginManager().registerEvents(this, plugin);
	}
	
	@EventHandler
	private void combat(EntityDamageByEntityEvent event) {
		if (event.getEntity() instanceof LivingEntity) {
			if (Bleed.isBleeding) {
				Bleed.isBleeding = false;
			}
			else {
				if (event.getDamager() instanceof Player) {
					if (event.getEntity() instanceof Player) {
						Resistance.buff((Player) event.getEntity());
					}
					Player damager = (Player) event.getDamager();
					String weapon = damager.getItemInHand().getType().name();
					if (weapon.contains("_SWORD")) {
						Swords.combat(event);
					}
					else if (weapon.contains("AIR")) {
						Toughness.combat(event);
					}
				}
				if (event.getDamager() instanceof Arrow) {
					Arrow arrow = (Arrow) event.getDamager();
					if (arrow.getShooter() instanceof Player) {
						Archery.combat(event);
					}
				}
			}
		}		
	}
	
	@EventHandler
	private void toughness(EntityDamageEvent event) {
		if (event.getEntity() instanceof Player) {
			Toughness.toughness(event);
		}
	}
	
	@EventHandler
	private void combatActives(PlayerInteractEntityEvent event) {
		if (event.getRightClicked() instanceof Player) {
			Player player = event.getPlayer();
			switch (Tool.getTool(player.getItemInHand())) {
			case SWORD:
				Active.prime(player, ActiveType.SWORDS, 10);
				break;
			case NONE:
				Active.prime(player, ActiveType.TOUGHNESS, 10);
				break;
			default:
				break;
			}
		}
	}
}
